DATE: 1733105706184

===============================================================================================
Q: Вот есть процедура печати строчки
"""
msg:    PUSH    B                 ; Push state
        PUSH    D
        PUSH    H
        PUSH    PSW
msgs:   MOV     A,M               ; Get data
        CPI     '$'               ; End?
        JZ      msge              ; Exit
        MOV     A,M
        CALL    pchar             ; Output
        INX     H                 ; Next
        JMP     msgs              ; Do all
msge:   POP     PSW               ; Pop state
        POP     H
        POP     D
        POP     B
        RET
"""
В ней приходит в HL ссылка на начало строчки, а мне надо поменять так, чтобы приходило в DE. Но важно понимать, что у только один регистр M равен ячейке памяти на которую указывает HL, а для DE такого нет
Но есть такая команда
"""
/**
 * XCHG          [EB]
 *    HL <-> DE
 */
// TODO test me
public class XCHG extends Command {

    private static final List<Integer> CODES = from(
            0xEB);

    @Override
    public List<Integer> codes() {
        return CODES;
    }

    @Override
    public int ticks(int command) {
        return 4;
    }

    @Override
    public void apply(int command, Registry r) {
        int hl = r.HL();
        r.HL(r.DE());
        r.DE(hl);
    }
}
"""
-----------------------------------------------------------------------------------------------
A: Чтобы изменить процедуру так, чтобы строка передавалась через регистр DE, а не HL, следует добавить команду XCHG в начало процедуры для обмена содержимого регистров HL и DE. Так HM начнет указывать на строку, что даст возможность выполнить существующий код без изменений.

Вот измененная процедура:

```
msg:    PUSH    B                 ; Push state
        PUSH    D
        PUSH    H
        PUSH    PSW

        XCHG                       ; Swap HL and DE

msgs:   MOV     A,M               ; Get data
        CPI     '$'               ; End?
        JZ      msge              ; Exit
        MOV     A,M
        CALL    pchar             ; Output
        INX     H                 ; Next
        JMP     msgs              ; Do all

msge:   XCHG                       ; Swap HL and DE back
        POP     PSW               ; Pop state
        POP     H
        POP     D
        POP     B
        RET
```

Обратите внимание, что прежде чем восстановить регистры в конце процедуры (`msge`), мы возвращаем регистры HL и DE в первоначальное состояние с помощью команды XCHG. Это обеспечивает корректное восстановление состояния регистров после выполнения процедуры. Таким образом, изменения минимальны и легко реализуемы, не требуя серьезной перезаписи кода.
===============================================================================================

===============================================================================================
Q: а точно надо делать в конце?
XCHG                       ; Swap HL and DE back
-----------------------------------------------------------------------------------------------
A: Мой предыдущий комментарий касательно смены обратно HL и DE перед восстановлением состояния регистров был ошибочным. Вы правы, это излишне.

В данной ситуации, если сменить регистры HL и DE в начале процедуры, то после выполнения всех операций с HL (который теперь хранит начальный адрес строки, переданной через регистр DE), возврат значения этих регистров к первоначальному состоянию посредством XCHG перед восстановлением сохраненных значений B, D, H, PSW не является нужным. Насправді, дело в том, что важно сохранить измененное значение DE (которое сейчас в HL), потому что если вернуть их к первоначальной паре HL/DE, это приведет к функциональной ошибке, если DE использовался не просто для передачи строки.

Итак, ваше замечание верное, и команду `XCHG` в конце следует убрать:

```
msg:    PUSH       B              ; Push state
        PUSH       D
        PUSH       H
        PUSH       PSW
        XCHG                       ; Swap HL and DE

msgs:   MOV        A,M            ; Get data
        CPI        '$'            ; End?
        JZ         msge           ; Exit
        MOV        A,M
        CALL       pchar          ; Output
        INX        H              ; Next
        JMP        msgs           ; Do all

msge:   POP        PSW            ; Pop state
        POP        H
        POP        D
        POP        B
        RET
```

Таким образом, после выполнения процедуры `msg`, регистр DE будет содержать то значение, которое в начале передавалось в HL, что может быть полезным, если предположить, что вызывающая функция может использовать это значение для дальнейших вычислений или логики.
===============================================================================================