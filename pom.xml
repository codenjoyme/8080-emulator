<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>spec</groupId>
    <artifactId>emulator</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <properties>
        <module.name>emulator</module.name>
        <build.file.name>${project.artifactId}-${project.version}</build.file.name>

        <server.host>localhost</server.host>
        <server.port>8080</server.port>
        <server.hostname>http://${server.host}:${server.port}</server.hostname>

        <java.version>8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Production -->

        <!-- Testing -->
        <junit.version>4.13.2</junit.version>
        <mockito.version>4.2.0</mockito.version>
        <dom.version>2.3.0-jaxb-1.0.6</dom.version>

        <!-- Maven -->
        <maven-compiler.version>3.8.1</maven-compiler.version>
        <maven-resources.version>3.2.0</maven-resources.version>
        <maven-jar.version>3.2.0</maven-jar.version>
        <maven-jetty.version>11.0.7</maven-jetty.version>
        <maven-assembly.version>3.7.1</maven-assembly.version>

        <jetty-webapp-folder>target/webapp-synth</jetty-webapp-folder>
        <commons-io.version>2.18.0</commons-io.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <gson.version>2.8.8</gson.version>
    </properties>

    <dependencies>
        <!-- Production -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.w3c</groupId>
            <artifactId>dom</artifactId>
            <version>${dom.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>run-server</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.4.0</version>
                        <configuration>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <warName>${build.file.name}</warName>
                            <webResources>
                                <resource>
                                    <directory>${project.basedir}/src/main/webapp</directory>
                                </resource>
                                <resource>
                                    <directory>${jetty-webapp-folder}</directory>
                                    <includes>
                                        <include>${build.file.name}.jar</include>
                                    </includes>
                                    <targetPath>/</targetPath>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/src/main/resources</directory>
                                    <includes>
                                        <include>lik</include>
                                        <include>specialist</include>
                                        <include>test</include>
                                    </includes>
                                    <filtering>false</filtering>
                                    <targetPath>/</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                        <executions>
                            <execution>
                                <!-- Плагин отвечает за сборку war с jar венутри -->
                                <id>[##5]-build-war</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>war</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${maven-jetty.version}</version>
                        <configuration>
                            <httpConnector>
                                <host>${server.host}</host>
                                <port>${server.port}</port>
                            </httpConnector>
                            <webApp>
                                <contextPath>/</contextPath>
                                <war>${project.build.directory}/${build.file.name}.war</war>
                            </webApp>
                            <supportedPackagings>jar</supportedPackagings>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jar-with-dependencies</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <include>lik/**</include>
                            <include>specialist/**</include>
                            <include>test/**</include>
                        </includes>
                        <excludes>
                            <exclude>test/arch/**</exclude>
                        </excludes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>3.2.4</version>
                        <executions>
                            <execution>
                                <!-- Плагин отвечает за сборку jar с зависимостями
                                     в папку src/main/webapp для дальнейшей сборки war  -->
                                <id>[##3]-build-jar-to-webapp</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <transformers>
                                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>spec.Main</mainClass>
                                        </transformer>
                                    </transformers>
                                    <artifactSet/>
                                    <outputFile>${project.basedir}/src/main/webapp/${build.file.name}.jar</outputFile>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- Плагин отвечает за сборку jar с зависимостями
                                     в папку build/out для работы batch/bash скриптов  -->
                                <id>[##4]-build-jar-to-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <transformers>
                                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>spec.Main</mainClass>
                                        </transformer>
                                    </transformers>
                                    <artifactSet/>
                                    <outputFile>${project.basedir}/build/out/${build.file.name}.jar</outputFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources.version}</version>
                <executions>
                    <execution>
                        <!-- Плагин отвечает за копирование ресурсов
                             в для jetty -->
                        <id>[##1]-copy-resources</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <outputDirectory>${jetty-webapp-folder}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>lik/**</include>
                                        <include>specialist/**</include>
                                        <include>test/**</include>
                                    </includes>
                                    <excludes>
                                        <exclude>test/arch/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <executions>
                    <execution>
                        <!-- Плагин отвечает за компиляцию
                             классов -->
                        <id>[##2]-compile-java</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                </executions>
                <configuration>
                    <encoding>utf8</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>